{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.areDependenciesEqual = areDependenciesEqual;\nexports.buildDependencies = buildDependencies;\nexports.buildWorkletsHash = buildWorkletsHash;\nexports.canApplyOptimalisation = canApplyOptimalisation;\nexports.getStyleWithoutAnimations = void 0;\nexports.hasColorProps = hasColorProps;\nexports.styleDiff = exports.parseColors = exports.isAnimated = void 0;\nexports.useEvent = useEvent;\nexports.useHandler = useHandler;\nexports.validateAnimatedStyles = void 0;\n\nvar _react = require(\"react\");\n\nvar _Colors = require(\"../Colors\");\n\nvar _core = require(\"../core\");\n\nvar _PlatformChecker = require(\"../PlatformChecker\");\n\nvar _UpdateProps = require(\"../UpdateProps\");\n\nvar _WorkletEventHandler = _interopRequireDefault(require(\"../WorkletEventHandler\"));\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction useEvent(handler) {\n  var eventNames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var rebuild = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var initRef = (0, _react.useRef)(null);\n\n  if (initRef.current === null) {\n    initRef.current = new _WorkletEventHandler.default(handler, eventNames);\n  } else if (rebuild) {\n    initRef.current.updateWorklet(handler);\n  }\n\n  (0, _react.useEffect)(function () {\n    return function () {\n      initRef.current = null;\n    };\n  }, []);\n  return initRef;\n}\n\nfunction useHandler(handlers, dependencies) {\n  var initRef = (0, _react.useRef)(null);\n\n  if (initRef.current === null) {\n    initRef.current = {\n      context: (0, _core.makeRemote)({}),\n      savedDependencies: []\n    };\n  }\n\n  (0, _react.useEffect)(function () {\n    return function () {\n      initRef.current = null;\n    };\n  }, []);\n  var _initRef$current = initRef.current,\n      context = _initRef$current.context,\n      savedDependencies = _initRef$current.savedDependencies;\n  dependencies = buildDependencies(dependencies, handlers);\n  var doDependenciesDiffer = !areDependenciesEqual(dependencies, savedDependencies);\n  initRef.current.savedDependencies = dependencies;\n  var useWeb = (0, _PlatformChecker.isWeb)();\n  return {\n    context: context,\n    doDependenciesDiffer: doDependenciesDiffer,\n    useWeb: useWeb\n  };\n}\n\nfunction buildWorkletsHash(handlers) {\n  return Object.values(handlers).reduce(function (acc, worklet) {\n    return acc + worklet.__workletHash.toString();\n  }, '');\n}\n\nfunction buildDependencies(dependencies, handlers) {\n  var handlersList = Object.values(handlers).filter(function (handler) {\n    return handler !== undefined;\n  });\n\n  if (!dependencies) {\n    dependencies = handlersList.map(function (handler) {\n      return {\n        workletHash: handler.__workletHash,\n        closure: handler._closure\n      };\n    });\n  } else {\n    dependencies.push(buildWorkletsHash(handlersList));\n  }\n\n  return dependencies;\n}\n\nfunction areDependenciesEqual(nextDeps, prevDeps) {\n  function is(x, y) {\n    return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y;\n  }\n\n  var objectIs = typeof Object.is === 'function' ? Object.is : is;\n\n  function areHookInputsEqual(nextDeps, prevDeps) {\n    if (!nextDeps || !prevDeps || prevDeps.length !== nextDeps.length) {\n      return false;\n    }\n\n    for (var i = 0; i < prevDeps.length; ++i) {\n      if (!objectIs(nextDeps[i], prevDeps[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return areHookInputsEqual(nextDeps, prevDeps);\n}\n\nfunction hasColorProps(updates) {\n  var colorPropsSet = new Set(_UpdateProps.colorProps);\n\n  for (var key in updates) {\n    if (colorPropsSet.has(key)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar parseColors = function () {\n  var _f = function _f(updates) {\n    for (var key in updates) {\n      if (_UpdateProps.colorProps.indexOf(key) !== -1) {\n        updates[key] = (0, _Colors.processColor)(updates[key]);\n      }\n    }\n  };\n\n  _f._closure = {\n    colorProps: _UpdateProps.colorProps,\n    processColor: _Colors.processColor\n  };\n  _f.asString = \"function parseColors(updates){const{colorProps,processColor}=jsThis._closure;{for(const key in updates){if(colorProps.indexOf(key)!==-1){updates[key]=processColor(updates[key]);}}}}\";\n  _f.__workletHash = 17387930022045;\n  _f.__location = \"C:\\\\Users\\\\victhangnguyen\\\\nails-sys\\\\nails-sys-client\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\hook\\\\utils.js (94:7)\";\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\n\nexports.parseColors = parseColors;\n\nfunction canApplyOptimalisation(upadterFn) {\n  var FUNCTIONLESS_FLAG = 1;\n  var STATEMENTLESS_FLAG = 2;\n  var optimalization = upadterFn.__optimalization;\n  return optimalization & FUNCTIONLESS_FLAG && optimalization & STATEMENTLESS_FLAG;\n}\n\nvar isAnimated = function () {\n  var _f = function _f(prop) {\n    var propsToCheck = [prop];\n\n    while (propsToCheck.length > 0) {\n      var currentProp = propsToCheck.pop();\n\n      if (Array.isArray(currentProp)) {\n        for (var _iterator = _createForOfIteratorHelperLoose(currentProp), _step; !(_step = _iterator()).done;) {\n          var item = _step.value;\n          propsToCheck.push(item);\n        }\n      } else if ((currentProp === null || currentProp === void 0 ? void 0 : currentProp.onFrame) !== undefined) {\n        return true;\n      } else if (typeof currentProp === 'object') {\n        for (var _i = 0, _Object$values = Object.values(currentProp); _i < _Object$values.length; _i++) {\n          var _item = _Object$values[_i];\n          propsToCheck.push(_item);\n        }\n      }\n    }\n\n    return false;\n  };\n\n  _f._closure = {};\n  _f.asString = \"function isAnimated(prop){const propsToCheck=[prop];while(propsToCheck.length>0){const currentProp=propsToCheck.pop();if(Array.isArray(currentProp)){for(const item of currentProp){propsToCheck.push(item);}}else if((currentProp===null||currentProp===void 0?void 0:currentProp.onFrame)!==undefined){return true;}else if(typeof currentProp==='object'){for(const item of Object.values(currentProp)){propsToCheck.push(item);}}}return false;}\";\n  _f.__workletHash = 3559579197933;\n  _f.__location = \"C:\\\\Users\\\\victhangnguyen\\\\nails-sys\\\\nails-sys-client\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\hook\\\\utils.js (109:7)\";\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\n\nexports.isAnimated = isAnimated;\n\nvar styleDiff = function () {\n  var _f = function _f(oldStyle, newStyle) {\n    var diff = {};\n    Object.keys(oldStyle).forEach(function (key) {\n      if (newStyle[key] === undefined) {\n        diff[key] = null;\n      }\n    });\n    Object.keys(newStyle).forEach(function (key) {\n      var value = newStyle[key];\n      var oldValue = oldStyle[key];\n\n      if (isAnimated(value)) {\n        return;\n      }\n\n      if (oldValue !== value && JSON.stringify(oldValue) !== JSON.stringify(value)) {\n        diff[key] = value;\n      }\n    });\n    return diff;\n  };\n\n  _f._closure = {\n    isAnimated: isAnimated\n  };\n  _f.asString = \"function styleDiff(oldStyle,newStyle){const{isAnimated}=jsThis._closure;{const diff={};Object.keys(oldStyle).forEach(function(key){if(newStyle[key]===undefined){diff[key]=null;}});Object.keys(newStyle).forEach(function(key){const value=newStyle[key];const oldValue=oldStyle[key];if(isAnimated(value)){return;}if(oldValue!==value&&JSON.stringify(oldValue)!==JSON.stringify(value)){diff[key]=value;}});return diff;}}\";\n  _f.__workletHash = 3422813503390;\n  _f.__location = \"C:\\\\Users\\\\victhangnguyen\\\\nails-sys\\\\nails-sys-client\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\hook\\\\utils.js (132:7)\";\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\n\nexports.styleDiff = styleDiff;\n\nvar getStyleWithoutAnimations = function () {\n  var _f = function _f(newStyle) {\n    var diff = {};\n\n    for (var key in newStyle) {\n      var value = newStyle[key];\n\n      if (isAnimated(value)) {\n        continue;\n      }\n\n      diff[key] = value;\n    }\n\n    return diff;\n  };\n\n  _f._closure = {\n    isAnimated: isAnimated\n  };\n  _f.asString = \"function getStyleWithoutAnimations(newStyle){const{isAnimated}=jsThis._closure;{const diff={};for(const key in newStyle){const value=newStyle[key];if(isAnimated(value)){continue;}diff[key]=value;}return diff;}}\";\n  _f.__workletHash = 2190466090064;\n  _f.__location = \"C:\\\\Users\\\\victhangnguyen\\\\nails-sys\\\\nails-sys-client\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\hook\\\\utils.js (155:7)\";\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\n\nexports.getStyleWithoutAnimations = getStyleWithoutAnimations;\n\nvar validateAnimatedStyles = function () {\n  var _f = function _f(styles) {\n    if (typeof styles !== 'object') {\n      throw new Error(\"useAnimatedStyle has to return an object, found \" + typeof styles + \" instead\");\n    } else if (Array.isArray(styles)) {\n      throw new Error('useAnimatedStyle has to return an object and cannot return static styles combined with dynamic ones. Please do merging where a component receives props.');\n    }\n  };\n\n  _f._closure = {};\n  _f.asString = \"function _f(styles){if(typeof styles!=='object'){throw new Error(\\\"useAnimatedStyle has to return an object, found \\\"+typeof styles+\\\" instead\\\");}else if(Array.isArray(styles)){throw new Error('useAnimatedStyle has to return an object and cannot return static styles combined with dynamic ones. Please do merging where a component receives props.');}}\";\n  _f.__workletHash = 316286613811;\n  _f.__location = \"C:\\\\Users\\\\victhangnguyen\\\\nails-sys\\\\nails-sys-client\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\hook\\\\utils.js (167:38)\";\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\n\nexports.validateAnimatedStyles = validateAnimatedStyles;","map":{"version":3,"sources":["C:/Users/victhangnguyen/nails-sys/nails-sys-client/node_modules/react-native-reanimated/lib/reanimated2/hook/utils.js"],"names":["useEvent","handler","eventNames","rebuild","initRef","current","WorkletEventHandler","updateWorklet","useHandler","handlers","dependencies","context","savedDependencies","buildDependencies","doDependenciesDiffer","areDependenciesEqual","useWeb","buildWorkletsHash","Object","values","reduce","acc","worklet","__workletHash","toString","handlersList","filter","undefined","map","workletHash","closure","_closure","push","nextDeps","prevDeps","is","x","y","objectIs","areHookInputsEqual","length","i","hasColorProps","updates","colorPropsSet","Set","colorProps","key","has","parseColors","indexOf","processColor","canApplyOptimalisation","upadterFn","FUNCTIONLESS_FLAG","STATEMENTLESS_FLAG","optimalization","__optimalization","isAnimated","prop","propsToCheck","currentProp","pop","Array","isArray","item","onFrame","styleDiff","oldStyle","newStyle","diff","keys","forEach","value","oldValue","JSON","stringify","getStyleWithoutAnimations","validateAnimatedStyles","styles","Error"],"mappings":"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","sourcesContent":["import { useEffect, useRef } from 'react';\nimport { processColor } from '../Colors';\nimport { makeRemote } from '../core';\nimport { isWeb } from '../PlatformChecker';\nimport { colorProps } from '../UpdateProps';\nimport WorkletEventHandler from '../WorkletEventHandler';\nexport function useEvent(handler, eventNames = [], rebuild = false) {\n    const initRef = useRef(null);\n    if (initRef.current === null) {\n        initRef.current = new WorkletEventHandler(handler, eventNames);\n    }\n    else if (rebuild) {\n        initRef.current.updateWorklet(handler);\n    }\n    useEffect(() => {\n        return () => {\n            initRef.current = null;\n        };\n    }, []);\n    return initRef;\n}\nexport function useHandler(handlers, dependencies) {\n    const initRef = useRef(null);\n    if (initRef.current === null) {\n        initRef.current = {\n            context: makeRemote({}),\n            savedDependencies: [],\n        };\n    }\n    useEffect(() => {\n        return () => {\n            initRef.current = null;\n        };\n    }, []);\n    const { context, savedDependencies } = initRef.current;\n    dependencies = buildDependencies(dependencies, handlers);\n    const doDependenciesDiffer = !areDependenciesEqual(dependencies, savedDependencies);\n    initRef.current.savedDependencies = dependencies;\n    const useWeb = isWeb();\n    return { context, doDependenciesDiffer, useWeb };\n}\n// builds one big hash from multiple worklets' hashes\nexport function buildWorkletsHash(handlers) {\n    return Object.values(handlers).reduce((acc, worklet) => \n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    acc + worklet.__workletHash.toString(), '');\n}\n// builds dependencies array for gesture handlers\nexport function buildDependencies(dependencies, handlers) {\n    const handlersList = Object.values(handlers).filter((handler) => handler !== undefined);\n    if (!dependencies) {\n        dependencies = handlersList.map((handler) => {\n            return {\n                workletHash: handler.__workletHash,\n                closure: handler._closure,\n            };\n        });\n    }\n    else {\n        dependencies.push(buildWorkletsHash(handlersList));\n    }\n    return dependencies;\n}\n// this is supposed to work as useEffect comparison\nexport function areDependenciesEqual(nextDeps, prevDeps) {\n    function is(x, y) {\n        /* eslint-disable no-self-compare */\n        return (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y);\n        /* eslint-enable no-self-compare */\n    }\n    const objectIs = typeof Object.is === 'function' ? Object.is : is;\n    function areHookInputsEqual(nextDeps, prevDeps) {\n        if (!nextDeps || !prevDeps || prevDeps.length !== nextDeps.length) {\n            return false;\n        }\n        for (let i = 0; i < prevDeps.length; ++i) {\n            if (!objectIs(nextDeps[i], prevDeps[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return areHookInputsEqual(nextDeps, prevDeps);\n}\nexport function hasColorProps(updates) {\n    const colorPropsSet = new Set(colorProps);\n    for (const key in updates) {\n        if (colorPropsSet.has(key)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function parseColors(updates) {\n    'worklet';\n    for (const key in updates) {\n        if (colorProps.indexOf(key) !== -1) {\n            updates[key] = processColor(updates[key]);\n        }\n    }\n}\nexport function canApplyOptimalisation(upadterFn) {\n    const FUNCTIONLESS_FLAG = 0b00000001;\n    const STATEMENTLESS_FLAG = 0b00000010;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const optimalization = upadterFn.__optimalization;\n    return (optimalization & FUNCTIONLESS_FLAG && optimalization & STATEMENTLESS_FLAG);\n}\nexport function isAnimated(prop) {\n    'worklet';\n    const propsToCheck = [prop];\n    while (propsToCheck.length > 0) {\n        const currentProp = propsToCheck.pop();\n        if (Array.isArray(currentProp)) {\n            for (const item of currentProp) {\n                propsToCheck.push(item);\n            }\n        }\n        else if ((currentProp === null || currentProp === void 0 ? void 0 : currentProp.onFrame) !== undefined) {\n            return true;\n        }\n        else if (typeof currentProp === 'object') {\n            for (const item of Object.values(currentProp)) {\n                propsToCheck.push(item);\n            }\n        }\n        // if none of the above, it's not the animated prop, check next one\n    }\n    // when none of the props were animated return false\n    return false;\n}\nexport function styleDiff(oldStyle, newStyle) {\n    'worklet';\n    const diff = {};\n    Object.keys(oldStyle).forEach((key) => {\n        if (newStyle[key] === undefined) {\n            diff[key] = null;\n        }\n    });\n    Object.keys(newStyle).forEach((key) => {\n        const value = newStyle[key];\n        const oldValue = oldStyle[key];\n        if (isAnimated(value)) {\n            // do nothing\n            return;\n        }\n        if (oldValue !== value &&\n            JSON.stringify(oldValue) !== JSON.stringify(value)) {\n            // I'd use deep equal here but that'd take additional work and this was easier\n            diff[key] = value;\n        }\n    });\n    return diff;\n}\nexport function getStyleWithoutAnimations(newStyle) {\n    'worklet';\n    const diff = {};\n    for (const key in newStyle) {\n        const value = newStyle[key];\n        if (isAnimated(value)) {\n            continue;\n        }\n        diff[key] = value;\n    }\n    return diff;\n}\nexport const validateAnimatedStyles = (styles) => {\n    'worklet';\n    if (typeof styles !== 'object') {\n        throw new Error(`useAnimatedStyle has to return an object, found ${typeof styles} instead`);\n    }\n    else if (Array.isArray(styles)) {\n        throw new Error('useAnimatedStyle has to return an object and cannot return static styles combined with dynamic ones. Please do merging where a component receives props.');\n    }\n};\n"]},"metadata":{},"sourceType":"script"}