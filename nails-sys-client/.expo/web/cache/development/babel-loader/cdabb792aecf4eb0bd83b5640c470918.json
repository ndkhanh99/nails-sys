{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Color from \"../constants/color\";\nimport Grid from \"../constants/layout/grid\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CategoryItem = function CategoryItem(props) {\n  return _jsx(TouchableOpacity, {\n    activeOpacity: 0.5,\n    style: !props.empty ? styles.item : [styles.item, styles.itemInvisible],\n    children: _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.itemText,\n        children: !props.empty && props.item.id && props.item.id\n      }), _jsx(Text, {\n        style: styles.itemText,\n        children: !props.empty && props.item.username && props.item.username\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  screen: {},\n  item: {\n    flex: 1,\n    backgroundColor: Color.secondary,\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 4,\n    height: Dimensions.get('window').width / Grid.numColumns\n  },\n  itemInvisible: {\n    backgroundColor: 'transparent'\n  },\n  itemText: {\n    color: Color.mainText\n  }\n});\nconsole.log(styles.item.height);\nexport default CategoryItem;","map":{"version":3,"sources":["C:/Users/victhangnguyen/nails-sys/nails-sys-client/components/CategoryItem.js"],"names":["React","Color","Grid","CategoryItem","props","empty","styles","item","itemInvisible","itemText","id","username","StyleSheet","create","screen","flex","backgroundColor","secondary","alignItems","justifyContent","margin","height","Dimensions","get","width","numColumns","color","mainText","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAGA,OAAOC,KAAP;AACA,OAAOC,IAAP;;;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC5B,SACI,KAAC,gBAAD;AAAkB,IAAA,aAAa,EAAE,GAAjC;AAAsC,IAAA,KAAK,EAAE,CAACA,KAAK,CAACC,KAAP,GAAeC,MAAM,CAACC,IAAtB,GAA6B,CAACD,MAAM,CAACC,IAAR,EAAcD,MAAM,CAACE,aAArB,CAA1E;AAAA,cACI,MAAC,IAAD;AAAA,iBACI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,QAApB;AAAA,kBAA+B,CAACL,KAAK,CAACC,KAAP,IAAgBD,KAAK,CAACG,IAAN,CAAWG,EAA3B,IAAiCN,KAAK,CAACG,IAAN,CAAWG;AAA3E,QADJ,EAEI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACG,QAApB;AAAA,kBAA+B,CAACL,KAAK,CAACC,KAAP,IAAgBD,KAAK,CAACG,IAAN,CAAWI,QAA3B,IAAuCP,KAAK,CAACG,IAAN,CAAWI;AAAjF,QAFJ;AAAA;AADJ,IADJ;AAQH,CATD;;AAWA,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,MAAM,EAAE,EADqB;AAE7BP,EAAAA,IAAI,EAAE;AACFQ,IAAAA,IAAI,EAAE,CADJ;AAEFC,IAAAA,eAAe,EAAEf,KAAK,CAACgB,SAFrB;AAGFC,IAAAA,UAAU,EAAE,QAHV;AAIFC,IAAAA,cAAc,EAAE,QAJd;AAKFC,IAAAA,MAAM,EAAE,CALN;AAMFC,IAAAA,MAAM,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAAzB,GAAiCtB,IAAI,CAACuB;AAN5C,GAFuB;AAU7BjB,EAAAA,aAAa,EAAE;AACXQ,IAAAA,eAAe,EAAE;AADN,GAVc;AAa7BP,EAAAA,QAAQ,EAAE;AACNiB,IAAAA,KAAK,EAAEzB,KAAK,CAAC0B;AADP;AAbmB,CAAlB,CAAf;AAkBAC,OAAO,CAACC,GAAR,CAAYvB,MAAM,CAACC,IAAP,CAAYc,MAAxB;AAEA,eAAelB,YAAf","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, View, Text, Dimensions, TouchableOpacity } from 'react-native';\r\n//! sass\r\nimport Color from '../constants/color';\r\nimport Grid from '../constants/layout/grid';\r\n\r\nconst CategoryItem = (props) => {\r\n    return (\r\n        <TouchableOpacity activeOpacity={0.5} style={!props.empty ? styles.item : [styles.item, styles.itemInvisible]}>\r\n            <View>\r\n                <Text style={styles.itemText}>{!props.empty && props.item.id && props.item.id}</Text>\r\n                <Text style={styles.itemText}>{!props.empty && props.item.username && props.item.username}</Text>\r\n            </View>\r\n        </TouchableOpacity>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    screen: {},\r\n    item: {\r\n        flex: 1,\r\n        backgroundColor: Color.secondary,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        margin: 4,\r\n        height: Dimensions.get('window').width / Grid.numColumns,\r\n    },\r\n    itemInvisible: {\r\n        backgroundColor: 'transparent',\r\n    },\r\n    itemText: {\r\n        color: Color.mainText,\r\n    },\r\n});\r\n\r\nconsole.log(styles.item.height);\r\n\r\nexport default CategoryItem;\r\n"]},"metadata":{},"sourceType":"module"}