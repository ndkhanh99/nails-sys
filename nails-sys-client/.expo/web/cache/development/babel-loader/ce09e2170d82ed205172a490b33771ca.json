{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.executeNativeBackPress = executeNativeBackPress;\nexports.isSearchBarAvailableForCurrentPlatform = void 0;\n\nvar _BackHandler = _interopRequireDefault(require(\"react-native-web/dist/exports/BackHandler\"));\n\nvar _Platform = _interopRequireDefault(require(\"react-native-web/dist/exports/Platform\"));\n\nvar isSearchBarAvailableForCurrentPlatform = ['ios', 'android'].includes(_Platform.default.OS);\nexports.isSearchBarAvailableForCurrentPlatform = isSearchBarAvailableForCurrentPlatform;\n\nfunction executeNativeBackPress() {\n  _BackHandler.default.exitApp();\n\n  return true;\n}","map":{"version":3,"sources":["utils.ts"],"names":["isSearchBarAvailableForCurrentPlatform","Platform","BackHandler"],"mappings":";;;;;;;;;;;;AAEO,IAAMA,sCAAsC,GAAG,CAAA,KAAA,EAAA,SAAA,EAAA,QAAA,CAG3CC,kBAHJ,EAA+C,CAA/C;;;AAKA,SAAA,sBAAA,GAAkC;AAEvCC,uBAAAA,OAAAA;;AACA,SAAA,IAAA;AACD","sourcesContent":["import { BackHandler, Platform } from 'react-native';\n\nexport const isSearchBarAvailableForCurrentPlatform = [\n  'ios',\n  'android',\n].includes(Platform.OS);\n\nexport function executeNativeBackPress() {\n  // This function invokes the native back press event\n  BackHandler.exitApp();\n  return true;\n}\n"]},"metadata":{},"sourceType":"script"}