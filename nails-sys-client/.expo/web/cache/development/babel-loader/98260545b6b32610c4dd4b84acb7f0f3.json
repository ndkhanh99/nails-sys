{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RotationGesture = void 0;\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _gesture = require(\"./gesture\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar RotationGesture = function (_ContinousBaseGesture) {\n  (0, _inherits2.default)(RotationGesture, _ContinousBaseGesture);\n\n  var _super = _createSuper(RotationGesture);\n\n  function RotationGesture() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, RotationGesture);\n    _this = _super.call(this);\n    _this.handlerName = 'RotationGestureHandler';\n    return _this;\n  }\n\n  return (0, _createClass2.default)(RotationGesture);\n}(_gesture.ContinousBaseGesture);\n\nexports.RotationGesture = RotationGesture;","map":{"version":3,"sources":["rotationGesture.ts"],"names":["constructor"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;;;;;IAGO,e;;;;;AACLA,6BAAc;AAAA;;AAAA;AACZ;AAEA,UAAA,WAAA,GAAA,wBAAA;AAHY;AAIb;;;EALI,6B","sourcesContent":["import { ContinousBaseGesture } from './gesture';\nimport { RotationGestureHandlerEventPayload } from '../RotationGestureHandler';\n\nexport class RotationGesture extends ContinousBaseGesture<RotationGestureHandlerEventPayload> {\n  constructor() {\n    super();\n\n    this.handlerName = 'RotationGestureHandler';\n  }\n}\n\nexport type RotationGestureType = InstanceType<typeof RotationGesture>;\n"]},"metadata":{},"sourceType":"script"}