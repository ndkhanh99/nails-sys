{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ComplexAnimationBuilder = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _animation = require(\"../../animation\");\n\nvar _BaseAnimationBuilder2 = require(\"./BaseAnimationBuilder\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar ComplexAnimationBuilder = function (_BaseAnimationBuilder) {\n  (0, _inherits2.default)(ComplexAnimationBuilder, _BaseAnimationBuilder);\n\n  var _super = _createSuper(ComplexAnimationBuilder);\n\n  function ComplexAnimationBuilder() {\n    (0, _classCallCheck2.default)(this, ComplexAnimationBuilder);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(ComplexAnimationBuilder, [{\n    key: \"easing\",\n    value: function easing(easingFunction) {\n      this.easingV = easingFunction;\n      return this;\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(degree) {\n      this.rotateV = degree;\n      return this;\n    }\n  }, {\n    key: \"springify\",\n    value: function springify() {\n      this.type = _animation.withSpring;\n      return this;\n    }\n  }, {\n    key: \"damping\",\n    value: function damping(_damping2) {\n      this.dampingV = _damping2;\n      return this;\n    }\n  }, {\n    key: \"mass\",\n    value: function mass(_mass2) {\n      this.massV = _mass2;\n      return this;\n    }\n  }, {\n    key: \"stiffness\",\n    value: function stiffness(_stiffness2) {\n      this.stiffnessV = _stiffness2;\n      return this;\n    }\n  }, {\n    key: \"overshootClamping\",\n    value: function overshootClamping(_overshootClamping2) {\n      this.overshootClampingV = _overshootClamping2;\n      return this;\n    }\n  }, {\n    key: \"restDisplacementThreshold\",\n    value: function restDisplacementThreshold(_restDisplacementThreshold2) {\n      this.restDisplacementThresholdV = _restDisplacementThreshold2;\n      return this;\n    }\n  }, {\n    key: \"restSpeedThreshold\",\n    value: function restSpeedThreshold(_restSpeedThreshold2) {\n      this.restSpeedThresholdV = _restSpeedThreshold2;\n      return this;\n    }\n  }, {\n    key: \"getAnimationAndConfig\",\n    value: function getAnimationAndConfig() {\n      var duration = this.durationV;\n      var easing = this.easingV;\n      var rotate = this.rotateV;\n      var type = this.type ? this.type : _animation.withTiming;\n      var damping = this.dampingV;\n      var mass = this.massV;\n      var stiffness = this.stiffnessV;\n      var overshootClamping = this.overshootClampingV;\n      var restDisplacementThreshold = this.restDisplacementThresholdV;\n      var restSpeedThreshold = this.restSpeedThresholdV;\n      var animation = type;\n      var config = {};\n\n      if (type === _animation.withTiming) {\n        if (easing) {\n          config.easing = easing;\n        }\n\n        if (duration) {\n          config.duration = duration;\n        }\n\n        if (rotate) {\n          config.rotate = rotate;\n        }\n      } else {\n        if (damping) {\n          config.damping = damping;\n        }\n\n        if (mass) {\n          config.mass = mass;\n        }\n\n        if (stiffness) {\n          config.stiffness = stiffness;\n        }\n\n        if (overshootClamping) {\n          config.overshootClamping = overshootClamping;\n        }\n\n        if (restDisplacementThreshold) {\n          config.restDisplacementThreshold = restDisplacementThreshold;\n        }\n\n        if (restSpeedThreshold) {\n          config.restSpeedThreshold = restSpeedThreshold;\n        }\n\n        if (rotate) {\n          config.rotate = rotate;\n        }\n      }\n\n      return [animation, config];\n    }\n  }], [{\n    key: \"easing\",\n    value: function easing(easingFunction) {\n      var instance = this.createInstance();\n      return instance.easing(easingFunction);\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(degree) {\n      var instance = this.createInstance();\n      return instance.rotate(degree);\n    }\n  }, {\n    key: \"springify\",\n    value: function springify() {\n      var instance = this.createInstance();\n      return instance.springify();\n    }\n  }, {\n    key: \"damping\",\n    value: function damping(_damping) {\n      var instance = this.createInstance();\n      return instance.damping(_damping);\n    }\n  }, {\n    key: \"mass\",\n    value: function mass(_mass) {\n      var instance = this.createInstance();\n      return instance.mass(_mass);\n    }\n  }, {\n    key: \"stiffness\",\n    value: function stiffness(_stiffness) {\n      var instance = this.createInstance();\n      return instance.stiffness(_stiffness);\n    }\n  }, {\n    key: \"overshootClamping\",\n    value: function overshootClamping(_overshootClamping) {\n      var instance = this.createInstance();\n      return instance.overshootClamping(_overshootClamping);\n    }\n  }, {\n    key: \"restDisplacementThreshold\",\n    value: function restDisplacementThreshold(_restDisplacementThreshold) {\n      var instance = this.createInstance();\n      return instance.restDisplacementThreshold(_restDisplacementThreshold);\n    }\n  }, {\n    key: \"restSpeedThreshold\",\n    value: function restSpeedThreshold(_restSpeedThreshold) {\n      var instance = this.createInstance();\n      return instance.restSpeedThreshold(_restSpeedThreshold);\n    }\n  }]);\n  return ComplexAnimationBuilder;\n}(_BaseAnimationBuilder2.BaseAnimationBuilder);\n\nexports.ComplexAnimationBuilder = ComplexAnimationBuilder;","map":{"version":3,"sources":["C:/Users/victhangnguyen/nails-sys/nails-sys-client/node_modules/react-native-reanimated/lib/reanimated2/layoutReanimation/animationBuilder/ComplexAnimationBuilder.js"],"names":["ComplexAnimationBuilder","easingFunction","easingV","degree","rotateV","type","withSpring","damping","dampingV","mass","massV","stiffness","stiffnessV","overshootClamping","overshootClampingV","restDisplacementThreshold","restDisplacementThresholdV","restSpeedThreshold","restSpeedThresholdV","duration","durationV","easing","rotate","withTiming","animation","config","instance","createInstance","springify","BaseAnimationBuilder"],"mappings":"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","sourcesContent":["import { withTiming, withSpring } from '../../animation';\nimport { BaseAnimationBuilder } from './BaseAnimationBuilder';\nexport class ComplexAnimationBuilder extends BaseAnimationBuilder {\n    static easing(easingFunction) {\n        const instance = this.createInstance();\n        return instance.easing(easingFunction);\n    }\n    easing(easingFunction) {\n        this.easingV = easingFunction;\n        return this;\n    }\n    static rotate(degree) {\n        const instance = this.createInstance();\n        return instance.rotate(degree);\n    }\n    rotate(degree) {\n        this.rotateV = degree;\n        return this;\n    }\n    static springify() {\n        const instance = this.createInstance();\n        return instance.springify();\n    }\n    springify() {\n        this.type = withSpring;\n        return this;\n    }\n    static damping(damping) {\n        const instance = this.createInstance();\n        return instance.damping(damping);\n    }\n    damping(damping) {\n        this.dampingV = damping;\n        return this;\n    }\n    static mass(mass) {\n        const instance = this.createInstance();\n        return instance.mass(mass);\n    }\n    mass(mass) {\n        this.massV = mass;\n        return this;\n    }\n    static stiffness(stiffness) {\n        const instance = this.createInstance();\n        return instance.stiffness(stiffness);\n    }\n    stiffness(stiffness) {\n        this.stiffnessV = stiffness;\n        return this;\n    }\n    static overshootClamping(overshootClamping) {\n        const instance = this.createInstance();\n        return instance.overshootClamping(overshootClamping);\n    }\n    overshootClamping(overshootClamping) {\n        this.overshootClampingV = overshootClamping;\n        return this;\n    }\n    static restDisplacementThreshold(restDisplacementThreshold) {\n        const instance = this.createInstance();\n        return instance.restDisplacementThreshold(restDisplacementThreshold);\n    }\n    restDisplacementThreshold(restDisplacementThreshold) {\n        this.restDisplacementThresholdV = restDisplacementThreshold;\n        return this;\n    }\n    static restSpeedThreshold(restSpeedThreshold) {\n        const instance = this.createInstance();\n        return instance.restSpeedThreshold(restSpeedThreshold);\n    }\n    restSpeedThreshold(restSpeedThreshold) {\n        this.restSpeedThresholdV = restSpeedThreshold;\n        return this;\n    }\n    getAnimationAndConfig() {\n        const duration = this.durationV;\n        const easing = this.easingV;\n        const rotate = this.rotateV;\n        const type = this.type ? this.type : withTiming;\n        const damping = this.dampingV;\n        const mass = this.massV;\n        const stiffness = this.stiffnessV;\n        const overshootClamping = this.overshootClampingV;\n        const restDisplacementThreshold = this.restDisplacementThresholdV;\n        const restSpeedThreshold = this.restSpeedThresholdV;\n        const animation = type;\n        const config = {};\n        if (type === withTiming) {\n            if (easing) {\n                config.easing = easing;\n            }\n            if (duration) {\n                config.duration = duration;\n            }\n            if (rotate) {\n                config.rotate = rotate;\n            }\n        }\n        else {\n            if (damping) {\n                config.damping = damping;\n            }\n            if (mass) {\n                config.mass = mass;\n            }\n            if (stiffness) {\n                config.stiffness = stiffness;\n            }\n            if (overshootClamping) {\n                config.overshootClamping = overshootClamping;\n            }\n            if (restDisplacementThreshold) {\n                config.restDisplacementThreshold = restDisplacementThreshold;\n            }\n            if (restSpeedThreshold) {\n                config.restSpeedThreshold = restSpeedThreshold;\n            }\n            if (rotate) {\n                config.rotate = rotate;\n            }\n        }\n        return [animation, config];\n    }\n}\n"]},"metadata":{},"sourceType":"script"}